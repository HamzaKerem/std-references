Creating references:
A reference is like an alias. It is not a pointer.
A '&' in the lvalue indicates reference.

int &bob = bobby;

The reference and the variable it references have the same value and address.

int mehmet = 10;
int &memo = mehmet; // memo belongs to data type "int &"
cout << mehment << " " << memo << endl; // 10 10

memo = 20;
cout << mehment << " " << memo << endl; // 20 20

Constant references:
i.e.: void func (const int &i, const int &j);
Constant references are used when copying data is not efficient enough. i.e.:
int getSum (const vector<int> &v)
{
	int sum = 0;
	for (int n : v)
		sum += n;
	return sum;	  
}
