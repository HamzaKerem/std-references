Bootstrapper is the code that runs first. It sets the server, initializes
components and ensures that all neccessary configuration, plugins & resources
are loaded. The bootstrapper initializes the game loop.

Nakama supports Custom Game Logic written in Go, Lua, TypeScript & JavaScript.

Remote Procedure Call (RPC) is a protocol that one program can use to request a service from a program located on another computer in a network. It's like calling a function or procedure, but instead of the function being in the same program or even on the same machine, it’s on a different machine.
A health check is a diagnostic operation to determine the health or status of a service or application. It's commonly used in distributed systems to ensure that all services are running correctly.
An RPC health check combines the concepts of RPC and health checks. It’s an RPC-based mechanism to remotely check the health status of a service. A client sends an RPC request to the service, asking if it’s healthy, and the service responds with its health status. This is useful in microservices architectures where services might be distributed across many machines.

Nakama is a scalable server for social and real-time games and apps. Nakama works as a distributed cluster so when your game or app gets featured in the App Store then all you need do is launch a few more instances and you’ll handle the extra load with ease.

One of the biggest advantages of using Nakama in a Docker env is that
it allows you to easily integrate CockroachDB or Postres into that env. 

CLI commands:
Nakama: start the server with the default configuration (or passed options)
migrate up|down|redo|status: manage database scheme change

There are a few configuration properties that need to be changed in most environments, for example you must change the values of socket.server_key, session.encryption_key and runtime.http_key before you deploy Nakama to a live production environment.

Upgrade nakama:
docker-compose down # top and remove both the Nakama and CockroachDB containers
docker pull heroiclabs/nakama # download the latest Nakama image
docker-compose up # start the containers (both Nakama and CockroachDB) as fresh installs
update the CockroachDB container:
docker pull cockroachdb/cockroach
run a database schema migration:
docker run heroiclabs/nakama migrate up

Prometheus is an open-source systems monitoring and alerting toolkit, designed for collecting and querying time-series data, making it one of the most popular tools for monitoring in cloud-native environments.
Prometheus Metrics are the time-series data points collected and stored by Prometheus. They represent various aspects of the system or application being monitored, such as CPU usage, memory consumption, request rates, error rates, and more.
