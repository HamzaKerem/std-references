Job artifacts refer to outputs generated by jobs.
Refer to "upload artifacts":

name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Deploy
        run: echo "Deploying..."

~~~~~~~~~~~~~~~~~~~~~~~
Artifacts can then be found in the summary section in the Actions page on GH.


Output filename
~~~~~~~~~~~~~
name: CI Pipeline
on: push

jobs:
  build:
    needs: [setup]
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Publish JS filename
        id: publish
        run: |
          script_file=$(find dist/assets/*.js -type f -execdir echo {} \;)
          echo "script-file=$script_file" >> $GITHUB_OUTPUT

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test

      - name: Output filename from build
        run: echo "Script file from build: ${{ needs.build.outputs.script-file }}"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy application
        run: |
          echo "Deploying with script file: ${{ needs.build.outputs.script-file }}"
          # Example deployment command using the script file
          # scp ${{ needs.build.outputs.script-file }} user@server:/path/to/deploy/


This allows for using the output of $script-file in another job (on another
runner machine).


Dependency caching:
- name: cache dependencies
  uses: actions/cache@v3
  with:
    path: ~/.npm
    key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # produces uniq hash val.

Don't use caching for artifacts. Artifacts are meant as output files of
workflows.

~~~~~~~
Env vars:
i.e.: ${{ env.MONGODB_USERNAME}}
