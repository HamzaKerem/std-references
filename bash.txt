Quick Notes:
Pipelines create subshells.
Using #!/usr/bin/env NAME makes the shell search for the 
first match of NAME in $PATH.
Use eval to replace regular shell substitution.
#!/bin/bash -e exits with an error on any command that fails.

Options:
printf -- '--' # The first '--' indicates the end of options.

Process Substitution:
<(cmd) / >(cmd)

Regex Test:
regex=^'lol'*
[[ "$str" =~ $regex ]] && ... # regex is not quoated! Not portable.
# Use a case condition for portability.

Element Count:
echo "$#" # Pos-param count
echo "${#arr[@]}" # Array element count
echo "${#str}" # String length count

Accessing All Elements:
echo "$@" # All pos-params
echo "${arr[@]" # All array elements

PIDs:
echo "$$" # PID
declare -p BASHPID # PID
echo "$!" # PID of job placed in the background
echo "$PPID" # PPID
Note: $$ is interpreted before execution. See: BASHPID.

Increment / Decrement Integer:
((++var)) / ((--var)) # not portable! 
# sh version: var=$((var+1))

Command Grouping:
{ cmd1; cmd2; cmd3; } # Code Block (same process)
( cmd1; cmd2; cmd3; ) # Subshell (seperate process)  

Get Substring:
echo "${str:0:5}" # Get substring starting at
# index 0 and extending 5 characters
echo "$str" | cut -b 1 # get Nth character of string

Recursive Globbing:
shopt -s globstar # enable recurive globbing
ls ~/** # recursively search

Here Strings:
read var <<< "TEXT" # Doesn't create a subshell! 

Special Variables:
echo "$-" # indicates special shell options set 

Use interactive programs in scripts:
cat << EOF | fdisk /dev/sda
o
n
p

+200M
...
EOF

Set locale to be default (resulting in English time and date):
export LC_ALL=C
